# Your First Machine Learning Application 
- https://github.com/mtobeiyf/keras-flask-deploy-webapp

# Building Image classifier 
Demo - choose the image and upload e.g pandas - hit preditct (inference)

# Machine learning Pipe line 
1. data ingestion- Get the data any format
2. use python clean the data (data preperation, normaliasation, transformation , validation,feturization 
3. model bulding & trainging - feed to machine learning model( Hyperparameter tunning , automatic model selection, model testing,model validation 
4. model deployment - deployment , batch scoring  

collection of weight files 1 and 0 big matrix of values learned over tiem from data set , statistic brain 
learned from the gives new data point classify the data e.g pandas or car , image classification etc 

# Machine learning app pipeline
deploy -- fit it into larger application which inclue other components data base , api , css , html 
web - flask framework python
python - pandas , keras , 
end user - browser 

## for making money we need to look at larger pic build applications - backend language , data base ,webserver, python , clint side we can make a
profitable bussiness 

Image classifier - pay from yur client (healthcare x- ray ) care inspection(photo of car automatic for insurance comapany )
email(spam or not spam), cyber security 

BUilding 
webapp with python - flask 
flask installation- https://flask.palletsprojects.com/en/1.1.x/installation/
https://uoa-eresearch.github.io/eresearch-cookbook/recipe/2014/11/26/python-virtual-env/
mkdir mysiraj
cd mysiraj
python3 -m venv venv
source venv/bin/activate
#source venv/bin/deactivate
sublime hello.py
quickstart- https://flask.palletsprojects.com/en/1.1.x/quickstart/
from flask import Flask
app = Flask(__name__)

@app.route('/')
def hello_world():
    return 'Hello, World!'
(save as sublime hello.py)
export FLASK_APP=hello.py
$ flask run
 * Running on http://127.0.0.1:5000/
 exit = ctrl + c
 
 we can build different pages 
 @app.route('/yoo')
def hello_world2():
    return 'Hello, World2!'
    
we build feature on this app like ML, database 
e.g image classifir 
logic flow (user flow)- build iage classifier 
index page - what do we want to be like - upload button in html-- 
(saved into the database intgrated into mysql(not integreted tothis week ), and a view of image 
In this project the the image is stored as ststic page 
- a button for classify -- here the ML model takes the image perform inference output the value in 
percentege we select the top percentage 
- so we have the flask for web app and what are we going to build the ML model, the easises thing is using the 
library Keras , html, javascript, css 
- from flask import flask
- from keras.model import load_model  (load_model submodul of keras loads the model)
- from keras.applications.resnet50 import ResNet50 (resnet50 trained on the bunch of images , car,cat,train ect)

app = Flask(__name__)
MODEL_PATH = 'models/your_model.h5'

model = ResNet50(weights ='imagenet')

# what we want inside the index
@app.route('/')
def index():
    return render_template('index.html')
other
@app.route('/predict')
def upload():
  f = request.method = 'POST':
  f = request.files['file']
  f.save =model_predict(file_path,model)
  
    return render_template('index.html')

## follow 

- opening sublime from terminal - 
- open /Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl
- ln -s "/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl" /usr/local/bin/sublime
- source .zshrc
- sublime 
https://medium.com/@goangle/launch-sublime-3-in-terminal-in-mac-osx-b59b279b62fa




